<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="템플릿을 가지고 학습자들에게 시험지를 낸다." tests="3" skipped="0" failures="0" errors="0" timestamp="2021-07-30T07:57:49" hostname="LAPTOP-IPOJ3GNM" time="0.184">
  <properties/>
  <testcase name="1. 시험지 템플릿을 학습자1에게 시험지를 낸다." classname="com.sp.fc.paper.service.PaperTest" time="0.049"/>
  <testcase name="2. 시험지를 2명 이상의 user 를 검색해 낸다. (학습자1, 학습자2)" classname="com.sp.fc.paper.service.PaperTest" time="0.062"/>
  <testcase name="3. 시험지 삭제 기능" classname="com.sp.fc.paper.service.PaperTest" time="0.069"/>
  <system-out><![CDATA[2021-07-30 16:57:49.841  INFO 27068 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sp.fc.paper.service.PaperTest], using SpringBootContextLoader
2021-07-30 16:57:49.843  INFO 27068 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.sp.fc.paper.service.PaperTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-07-30 16:57:49.843  INFO 27068 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.sp.fc.paper.service.PaperTest]: PaperTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-07-30 16:57:49.848  INFO 27068 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.sp.fc.paper.PaperTestApp for test class com.sp.fc.paper.service.PaperTest
2021-07-30 16:57:49.849  INFO 27068 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-07-30 16:57:49.851  INFO 27068 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@285b4279, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3aeb99d7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@19f7578d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6cb3e3c5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1e892ca0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@784a2b87, org.springframework.test.context.event.EventPublishingTestExecutionListener@5b22403c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@287c3d56, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7fc7f8d5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5678f2b9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1f926bea, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@56cd73c3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@168c389f]
2021-07-30 16:57:49.860  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@7d67e869, testMethod = 시험지_템플릿을_학습자1에게_시험지를_낸다@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1ce4ea75]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from sp_problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from sp_paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from sp_school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_
Hibernate: insert into sp_school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_ where user0_.user_id in (?)
Hibernate: insert into sp_paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=?
2021-07-30 16:57:49.906  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@7d67e869, testMethod = 시험지_템플릿을_학습자1에게_시험지를_낸다@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-07-30 16:57:49.911  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@56d0a04f, testMethod = 시험지를_2명_이상의_user를_검색해_낸다@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1ce4ea75]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from sp_problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from sp_paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from sp_school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_
Hibernate: insert into sp_school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_ where user0_.user_id in (? , ?)
Hibernate: insert into sp_paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=?
2021-07-30 16:57:49.970  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@56d0a04f, testMethod = 시험지를_2명_이상의_user를_검색해_낸다@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-07-30 16:57:49.975  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@3ffaba3d, testMethod = 시험지_삭제_기능@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1ce4ea75]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from sp_problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from sp_paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from sp_school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_
Hibernate: insert into sp_school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from sp_authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into sp_authority (user_id, authority) values (?, ?)
Hibernate: insert into sp_paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update sp_paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update sp_problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from sp_user user0_ where user0_.user_id in (? , ?)
Hibernate: insert into sp_paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into sp_paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=? and (paper0_.study_user_id in (?))
Hibernate: update sp_paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: delete from sp_paper where paper_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=? and (paper0_.study_user_id in (?))
Hibernate: delete from sp_paper where paper_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=? and (paper0_.study_user_id in (?))
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from sp_paper paper0_ where paper0_.paper_template_id=?
2021-07-30 16:57:50.042  INFO 27068 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@49d32e40 testClass = PaperTest, testInstance = com.sp.fc.paper.service.PaperTest@3ffaba3d, testMethod = 시험지_삭제_기능@PaperTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@213c62cd testClass = PaperTest, locations = '{}', classes = '{class com.sp.fc.paper.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3c1dbabe, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6dc2e19, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@9734f8ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5bd009fd, [ImportsContextCustomizer@3a04b33a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3b9ad6cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@378a3e30, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
